---
title: "<br> Univariate analysis of categorical variables"
author: "Making Sense of Criminological Data (Week 2)"
subtitle: "Sam Langton, University of Manchester"
format: revealjs
editor_options: 
  chunk_output_type: console
execute:
  echo: false
---

```{r setup}
library(knitr)
library(dplyr)
library(readr)
library(tidyr)
library(ggplot2)
library(forcats)
library(kableExtra)
```


## Plan for today

- What is univariate analysis?
- Categorical variables
- Analysis
  - Frequencies & percentages
  - Stop-and-search example
- Visualisation

## Univariate analysis

<br>

::: columns

::: column

- Univariate = one variable
- Simple but common (and important)
- Typically **summarising** and **describing** 

:::

::: column

![](img/unicycle.gif)

:::

:::

## Categorical variables

::: columns

::: column

- Two or more categories, such as:
  - Nationality
  - Crime type
  - Education
- Nominal or ordinal

:::

::: column

![](img/categorical.png){width=70%}

:::

:::

## Analysis: frequencies 

```{r}
students_df <- data.frame(
  Student.ID  = c(12,6,34,2,41,15),
  Nationality = c("British","British","French",
                   "Dutch","French","British")
)
```

::: columns

::: column

```{r}
kable(students_df, align = "l", caption = "Raw data") 
```

:::

::: column
  
:::

:::

## Analysis: frequencies 

::: columns

::: column

```{r}
kable(students_df, align = "l", caption = "Raw data")
```

:::

::: column

<br>

```{r}
freq_df <- students_df %>% 
  group_by(Nationality) %>% 
  summarise(Count = n())

kable(freq_df, align = "l", caption = "Frequency table")
```

:::

:::

## Analysis: proportions

<br>

::: columns

::: column

```{r}
kable(freq_df, align = "l", caption = "Frequency table")
```

:::

::: column 

:::

:::

## Analysis: proportions

<br>

::: columns

::: column

```{r}
kable(freq_df, align = "l", caption = "Frequency table")
```

:::

::: column

```{r}
freq_df %>% 
  mutate(total = sum(Count),
         Percent = round(Count/total*100, 0)) %>% 
  select(-total, -Count) %>% 
  kable(align = "l", caption = "Proportion table")
```

:::

::: column
  
:::

:::

## Take a breather

## Frequency & proportions

Are there differences between police forces with regards to the gender of individuals subject to stop-and-search?

## Frequency & proportions

Are there differences between police forces with regards to the gender of individuals subject to stop-and-search?

<center>

```{r}
mersey <- read_csv("data/2025-07-merseyside-stop-and-search.csv")

syork <- read_csv("data/2025-07-south-yorkshire-stop-and-search.csv")

mersey_gen <- count(mersey, Gender, name = "Count") %>%
  drop_na()

syork_gen <- count(syork, Gender, name = "Count") %>% 
  drop_na() %>% 
  bind_rows(data.frame(
    Gender = "Other", Count = 0 # Making categories comparable.
  ))

mersey %>% 
  sample_n(size = 20) %>%
  mutate(ID = 1:20) %>% 
  select(ID, Type, Date, Latitude, Longitude, Gender, 
         `Self-defined ethnicity`) %>% 
  kable(x = ., caption = "Merseyside data sample for July 2025. Source: https://data.police.uk/data/.") %>% 
  kable_styling(font_size = 22) %>%
  scroll_box(width = "1000px", height = "420px")
```

</center>

## Frequency table 

<br>

::: columns

::: column

```{r}
kable(mersey_gen, caption = "Merseyside")
```

:::

::: column

```{r}
kable(syork_gen, caption = "South Yorkshire") 
```

:::

:::

<br>

<center>



</center>

## Proportion table

<br>

```{r}
mersey <- read_csv("data/2025-07-merseyside-stop-and-search.csv")

syork <- read_csv("data/2025-07-south-yorkshire-stop-and-search.csv")

mersey_gen <- count(mersey, Gender, name = "Count") %>%
  drop_na()

syork_gen <- count(syork, Gender, name = "Count") %>% 
  drop_na() %>% 
  bind_rows(data.frame(
    Gender = "Other", Count = 0 # Making categories comparable.
  ))
```

::: columns

::: column

```{r}
mersey_gen %>% 
  mutate(total = sum(Count),
         Percent = round(Count/total*100, 0)) %>% 
  select(-total, -Count) %>% 
  kable(caption = "Merseyside")
```

:::

::: column

```{r}
syork_gen %>% 
  mutate(total = sum(Count),
         Percent = round(Count/total*100, 0)) %>% 
  select(-total, -Count) %>% 
  kable(caption = "South Yorkshire") 
```

:::

:::

<br>

<center>

(no, it's not a mistake)

</center>

## Proportions not always 'better'

What is the gender breakdown of individuals subject to stop-and-search in South Yorkshire?


## Proportions not always 'better'

What is the gender breakdown of individuals subject to stop-and-search in South Yorkshire?

<center>

<p style="font-size:26px"> _Data collected between 7-8pm on 1 July_. </p>

::: columns

::: column

| Gender | Percent |
| :----- | -----:  |
| Female | 100     |
| Male   | 0       |
| Other  | 0       |

: Proportion table

:::

::: column
  
:::
:::

</center>

## Proportions not always 'better'

What is the gender breakdown of individuals subject to stop-and-search in South Yorkshire?

<center>

<p style="font-size:26px"> _Data collected between 7-8pm on 1 July_. </p>

::: columns

::: column

| Gender | Percent |
| :----- | -----:  |
| Female | 100     |
| Male   | 0       |
| Other  | 0       |

: Proportion table

:::

::: column

| Gender | Count  |
| :----- | ------:|
| Female | 1      |
| Male   | 0      |
| Other  | 0      |

: Frequency table

:::

:::
 
</center>

## What's the difference with ordinal?

For now, not much.

But consider presentation in **tables** and **graphs**.

## Ordinal tables

Example: A table summarising survey results of people rating their local police force (CSEW, 2025).

```{r}
survey_df <- read_csv("data/ordinal_example.csv", skip = 1)

set.seed(1612)
survey_df %>% 
  sample_n(size = 5, replace = FALSE) %>% 
  kable() %>% 
  kable_styling(font_size = 30)
```

...irritating.

## Ordinal visualisations

Example: rating local police forces over time (CSEW).

```{r, fig.width=18, fig.height=9}
library(readxl)

survey_df <- readxl::read_excel("data/experienceandperceptionofpolicingandcjstablesyemarch2025.xlsx", sheet = 4, skip = 7)

survey_clean_df <- survey_df %>% 
  slice(-6) %>% 
  rename(Rating = `Trends in ratings`) %>% 
  select(1:21) %>% 
  pivot_longer(cols = -Rating) %>% 
  group_by(Rating) %>% 
  mutate(year_beg = c(2003:2019, 2022:2024)) %>% 
  ungroup()

# Mess up order intentionally for example.
survey_clean_df <- survey_clean_df %>% 
  mutate(Rating_fr = fct_relevel(Rating,
                                 "Good",
                                 "Fair",
                                 "Excellent",
                                 "Poor",
                                 "Very poor"))
  

ggplot(data = survey_clean_df) +
  geom_col(mapping = aes(x = year_beg, 
                         y = value, fill = Rating_fr)) +
  labs(x = "Year", y = "Proportion", fill = NULL) +
  theme_bw() +
  theme(legend.position = "bottom",
        text = element_text(size = 30))

```

## Ordinal visualisations

Example: rating local police forces over time (CSEW).

```{r, fig.width=18, fig.height=9}
ggplot(data = survey_clean_df) +
  geom_col(mapping = aes(x = year_beg, 
                         y = value, fill = Rating), alpha = 0.9,
           colour = "grey") +
  labs(x = "Year", y = "Proportion", fill = NULL) +
  scale_fill_brewer(palette = "Spectral", direction = -1) +
  theme_bw() +
  theme(legend.position = "bottom",
        text = element_text(size = 30))
```

## All done!

